micronaut:
  application:
    name: micronautAwsServerless

datasources:
#  default:
#    url: jdbc:mysql://localhost:3306/database1
#    username: root
#    password: password
#    driverClassName: com.mysql.cj.jdbc.Driver
#    schema-generate: CREATE
#    dialect: org.hibernate.dialect.MySQL8Dialect
#    #hikari
#    leakDetectionThreshold: 20000 # Warn when a connections is kept out of the pool for more than 20 seconds.
#    pool-name: hikari-read-write
#    maximum-pool-size: 10
#    read-only: false
#    data-source-properties:
#      cachePrepStmts: true
#      enabledTLSProtocols: TLSv1.2
#      prepStmtCacheSize: 250
#      prepStmtCacheSqlLimit: 2048
#      requireSSL: true
#      useSSL: true
#      useServerPrepStmts: true
#      verifyServerCertificate: false
#      x-ray: false
      
      
  default:
    url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;IGNORECASE=TRUE
    username: sa
    password: ''
    driverClassName: org.h2.Driver
    schema-generate: CREATE_DROP
    dialect: org.hibernate.dialect.MySQL8Dialect
    # hikari
    leakDetectionThreshold: 20000 # Warn when a connections is kept out of the pool for more than 20 seconds.
    pool-name: hikari-read-write
    maximum-pool-size: 10
    read-only: false
    data-source-properties:
      cachePrepStmts: true
      enabledTLSProtocols: TLSv1.2
      prepStmtCacheSize: 250
      prepStmtCacheSqlLimit: 2048
      requireSSL: true
      useSSL: true
      useServerPrepStmts: true
      verifyServerCertificate: false
      x-ray: false
    
    
#  read-only:
#    url: jdbc:h2:mem:devDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#    username: sa
#    password: ''
#    driverClassName: org.h2.Driver
#    schema-generate: CREATE_DROP
#    dialect: H2
#    pool-name: hikari-read-only
#    maximum-pool-size: 10


jpa:
  default:
    entity-scan:
      packages: se.solrike.demo.book
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        show_sql: false
        format_sql: true
