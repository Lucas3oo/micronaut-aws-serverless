plugins {
  id 'se.solrike.cloudformation'
  id 'seek.aws' apply false
}

def lambdaRepoS3Bucket = 'slrk-lambda-repo'
task uploadJarToS3(type: seek.aws.s3.UploadFile, dependsOn: jar) {
  group = 'AWS'
  description = 'Uploads the jar to S3 amazon storage so it can be referenced when defining the lambda function in AWS'
  bucket lambdaRepoS3Bucket
  file jar.archivePath
  key jar.archiveFileName.get()
  failIfObjectExists false
}

task deploySamStack(type: se.solrike.cloudformation.CreateOrUpdateStackTask, dependsOn: uploadJarToS3) {
  group = 'AWS'
  description = 'Deployment of the API gateway and the lambda using a SAM Cloudformation template'
  Properties p = new Properties()
  p.codeFileName = jar.archiveFileName.get()
  p.codeS3BucketName = lambdaRepoS3Bucket
  p.environment = 'stage25'
  p.functionName = 'books-api'
  p.handler = 'io.micronaut.function.aws.proxy.MicronautLambdaHandler::handleRequest'
  capabilities = [
    'CAPABILITY_IAM',
    'CAPABILITY_AUTO_EXPAND'
  ]
  parameters = p
  stackName = "slrk-${p.environment}-aws-sam-${p.functionName}"
  templateFileName = 'aws-cloudformation/aws-sam-httpapi.yaml'
}
